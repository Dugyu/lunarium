import { useState } from '@lynx-js/react';

import { cn } from '@/utils';

type CheckboxProps = {
  size?: 'sm' | 'md';
  defaultChecked?: boolean;
  indeterminate?: boolean;
  disabled?: boolean;
};

const CheckMarkPathData = {
  sm:
    'M11.9177 4.49757C12.0738 4.59984 12.1519 4.65097 12.1917 4.72042C12.2267 4.78152 12.2414 4.85211 12.2338 4.92209C12.2251 5.00165 12.174 5.07974 12.0717 5.23592L8.29093 11.0102C8.27298 11.0376 8.25661 11.0626 8.24143 11.0854L7.99862 11.4563C7.85656 11.6732 7.62159 11.8117 7.36297 11.8309C7.10434 11.85 6.85155 11.7477 6.67908 11.554L6.3694 11.2062C6.35533 11.1905 6.3404 11.1738 6.32444 11.1558L4.06554 8.61911C3.94139 8.47969 3.87932 8.40998 3.85903 8.33256C3.84119 8.26447 3.84536 8.19248 3.87095 8.1269C3.90004 8.05235 3.96975 7.99027 4.10917 7.86612L4.55726 7.46711C4.69668 7.34296 4.76639 7.28088 4.8438 7.2606C4.91189 7.24275 4.98389 7.24692 5.04947 7.27251C5.12402 7.3016 5.18609 7.37131 5.31024 7.51073L7.20024 9.63307L10.6773 4.32294C10.7796 4.16676 10.8307 4.08867 10.9002 4.04892C10.9613 4.01395 11.0319 3.99922 11.1019 4.00684C11.1814 4.01551 11.2595 4.06664 11.4157 4.1689L11.9177 4.49757Z',
  md:
    'M13.877 5.00927C13.9764 5.02014 14.0744 5.08364 14.2696 5.21142L14.8965 5.62256C15.0917 5.75038 15.1896 5.81406 15.2393 5.90088C15.283 5.97719 15.3015 6.06542 15.292 6.15283C15.2812 6.25227 15.2167 6.35018 15.0889 6.54541L10.3633 13.7632C10.341 13.7973 10.3207 13.8285 10.3018 13.8569L9.99807 14.3208C9.8205 14.592 9.52643 14.7646 9.20315 14.7886C8.87996 14.8125 8.56421 14.6849 8.34866 14.4429L7.96096 14.0083C7.94341 13.9887 7.92522 13.9672 7.9053 13.9448L5.08108 10.7739C4.92633 10.6001 4.8487 10.513 4.82327 10.4165C4.80096 10.3314 4.80593 10.2407 4.83792 10.1587C4.87429 10.0656 4.96185 9.98837 5.13577 9.83349L5.69632 9.33447C5.87059 9.17928 5.95795 9.10104 6.05471 9.07568C6.1397 9.05352 6.22973 9.05938 6.31155 9.09131C6.40465 9.12772 6.48265 9.21501 6.63772 9.38916L9.00003 12.0415L13.3467 5.40381C13.4743 5.20887 13.5383 5.11168 13.625 5.06201C13.7014 5.0183 13.7895 4.99975 13.877 5.00927Z',
};
const CheckMarkPath = {
  sm: `path("${CheckMarkPathData.sm}")`,
  md: `path("${CheckMarkPathData.md}")`,
};

function Checkbox({ defaultChecked, size = 'sm', disabled }: CheckboxProps) {
  const [checked, setChecked] = useState(defaultChecked);
  return (
    <view
      className={cn(
        'border-neutral-2 border-[1.5px] ui-checked:border-0 ui-checked:bg-primary rounded-[4px] ui-disabled:opacity-40',
        size === 'sm' ? 'size-[16px]' : 'size-[20px]',
        checked && 'ui-checked',
        disabled && 'ui-disabled',
      )}
      bindtap={() => setChecked(prev => !prev)}
      event-through={false}
    >
      {/* Indicator */}
      <view
        className={cn(
          'size-full bg-primary-content',
        )}
        style={{ clipPath: CheckMarkPath[size] }}
      />
    </view>
  );
}

export { Checkbox };
